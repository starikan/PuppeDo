---
name: main
type: test

data:
  mainTestData: foo

dataExt:
  - dataExtMain

beforeTest:
  - envSwitch:
      data: { envName: 'mainEnv' }

runTest:
  - goTo:
      bD: { url: baseUrl }
  - waitTime:
      description: Checking If statement
      d: { time: 2000 }
      if: '1 !== 1'
      errorIf: '1 === 1'
      errorIfResult: '1 === 1'
  - getText:
      description: Get text with repeat
      s: { selector: title }
      r: { titleText: text }
      repeat: 3
  - blank:
      description: Some data function
      ðŸ”‘ðŸ“‹: { myDataFunction: '"text".replace("text", "Function text: ") + titleText' }
  - blank:
      description: Bind data from function
      ðŸ“ŒðŸ“‹: { myDataBinded: myDataFunction }
  - typeInput:
      description: Input some text in field INPUT
      bS: { input: wikiInput }
      bD: { text: myDataBinded }
      o:
        screenshot: true
        fullpage: true
  - clickSelector:
      description: Click on field INPUT
      bS: { selector: wikiInput }
      o:
        # screenshot: true
        # fullpage: true
        timeDellay: 1000
  # - cdpGetSelector:
  - todo:
      description: Make awesome test
  - subTest:
  - blank:

---
name: mainWithError
type: test

data:
  mainTestData: foo

dataExt:
  - dataExtMain

beforeTest:
  - envSwitch:
      data: { envName: 'mainEnv' }

runTest:
  - goTo:
      bD: { url: baseUrl }
  - clickSelector:
      description: Input some text in field INPUT
      s: { input: '.wikiInput' }
      d: { text: 'Some text' }
